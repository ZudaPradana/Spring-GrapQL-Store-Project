
# QUERY & MUTATION
type Query {
    getAllCustomer(name: String, isActive: Boolean, page: Int, size: Int): ResponGetAllData
    getCustomerById(customerId: ID!) : ResponGetData
}

type Mutation {
    updateCustomer(id: String!, updateCustomer: RequestCustomerUpdate): ResponHeader
    createCustomer(createCustomer: RequestCustomerCreate): ResponHeader
    deleteCustomer(id: String!): ResponHeader
}


# ENTITY
type Customers {
    customerId: ID!
    customerName: String
    customerAddress: String
    customerCode: String
    customerPhone: String
    isActive: Boolean
    lastOrderDate: String
    pic: String
    password : String
    username: String
}


# INPUT
input RequestCustomerUpdate {
    customerName: String
    customerAddress: String
    customerCode: String
    customerPhone: String
    pic: String
}

input RequestCustomerCreate {
    username: String!
    password: String!
    customerName: String!
    customerAddress: String
    customerCode: String
    customerPhone: String
    isActive: Boolean
    lastOrderDate: String
    pic: String
}



# RESPONSE
type ResponGetAllData{
    header : ResponHeader
    data : [Customers]
}

type ResponHeader {
    code : String
    status : Boolean
    message : String
}

type ResponGetData{
header : ResponHeader
data : Customers
}

